posts-expand:
    jq . data/posts.json > data/posts_expand.json
    mv data/posts_expand.json data/posts.json

posts-compact:
    jq -c . data/posts.json > data/posts_compact.json
    mv data/posts_compact.json data/posts.json

clip-download-posts:
    cat scripts/browser/download_posts.js | xclip -sel clip

check-all:
    python ./scripts/ids_check.py
    python ./scripts/sanity_check.py
    python ./scripts/sanity_check_2.py
    python ./scripts/sanity_check_3.py

preview-post ID:
    jq '.[] | select(.id == "{{ID}}")' data/posts.json

preview-posts:
    jq . data/posts.json

archive-data:
    zip -r "Community.zip" archive archive_imgs data emote

clear-data:
    rm -f emote/*
    rm -f archive/*
    rm -f archive_imgs/*
    rm -f data/emote_mapping.json
    rm -f data/posts.json
    rm -f data/post_ids.json

std-run:
    cargo run --release -- --archive-dir "archive" --emote-data-dir "data" --post-ids-file "data/post_ids.json"

std-run-on DIR:
    cargo run --release -- --archive-dir "{{DIR}}/archive" --emote-data-dir "{{DIR}}/data" --post-ids-file "{{DIR}}/data/post_ids.json"